Do a full refactor of the chat input bar and the prompt suggestion pills. You can ignore most of the current implementation logic, but keep the general visual styling and tone.

The current behavior is wrong. The input bar jumps around, overlaps the prompt suggestions, and jumps around the viewport on mobile. I need this to behave like a normal modern mobile chat UI.

Requirements:
	1.	Prompt suggestion pills
	•	When visible, the suggestion pills should always render directly above the chat input bar.
	•	The pills should stack/wrap on mobile in multiple rows if needed.
	•	The pills should never be covered by the input bar.
	•	The pills should stay visible until a message is actually sent. Focusing the input alone should NOT hide them.
	•	After sending a message, hide the pills. If the chat is reset with the reload button, show the pills again.
	•	Do not wrap the pills in a big card-style container. Each pill is just its own rounded chip.
	2.	Chat input bar layout
	•	The row inside the chat bar should be: refresh icon on the left, the textarea with placeholder text, character counter, and send button (paper airplane in a circular button) on the right.
	•	Remove the plus button and the mic button entirely.
	•	Everything in this row must be vertically centered. The send icon must be visually centered inside its circle.
	•	The textarea should expand vertically as the user types, up to a reasonable max height (around 200px). After that it should scroll internally.
	•	Long placeholder or typed text must wrap cleanly without pushing icons off screen or collapsing the layout.
	3.	Desktop / page flow
	•	The chat input bar should sit at the bottom of the page content. Do NOT make it fixed to the viewport on desktop.
	•	Reduce the bottom padding. The gap between the bottom of the page and the bar should be small and intentional.
	•	The pills should appear right above the bar with consistent spacing.
	4.	Mobile behavior with the keyboard
	•	When the user taps the textarea and the mobile keyboard opens, the chat bar should move up just enough to sit directly above the keyboard.
	•	It should NOT jump to the top of the viewport.
	•	While the keyboard is open and the user is typing, the bar should stay anchored above the keyboard. Do not keep re-adjusting it or animating it around.
	•	When the user scrolls the page upward while the keyboard is open, assume they are done typing. At that moment:
	•	Blur the textarea so the keyboard dismisses.
	•	Return the chat bar to its resting position at the bottom of the page content.
	•	When the keyboard is closed, the chat bar must NOT float mid-screen. It should always snap back to the bottom of the page content.
Use the standard approach for this:
	•	Detect keyboard height using window.visualViewport.
	•	Apply a bottom offset or transform so the bar sits above the keyboard while focused.
	•	Remove that offset when the textarea is blurred.
	•	Blurring the textarea should be done automatically if the user scrolls the page while the keyboard is open.
	5.	Stability and spacing
	•	No forced page scroll to top, no viewport jumps.
	•	No huge extra padding hacks at the bottom of the page.
	•	No overlap between the bar and the pills.
	•	Everything should feel stable: two states only
	•	Resting at the bottom when not typing
	•	Lifted just above the keyboard while typing

Deliverables:
	•	Rewrite the JSX/TSX and styles for the chat bar and suggestion pills to satisfy all the rules above.
	•	Implement the mobile keyboard handling and blur-on-scroll behavior.
	•	Make sure the layout works in both light and dark mode.
	•	Keep the overall visual style consistent with the current design.